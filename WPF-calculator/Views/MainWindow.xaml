<Window x:Class="WPF_calculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
       xmlns:vm="clr-namespace:WPF_calculator.ViewModels"
        xmlns:local="clr-namespace:WPF_calculator"       
        mc:Ignorable="d"
        Title="" Height="350" Width="300" MinHeight="450" MinWidth="300">
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Control.FontSize" Value="18"/>
            <Setter Property="Control.BorderThickness" Value="2"/>
            <Setter Property="Control.FontWeight" Value="Bold"/>
            <Setter Property="Control.Foreground" Value="White"/>
            <Setter Property="Command" Value="{Binding AddCommand}"/>
            <Setter Property="CommandParameter" Value="{Binding Content, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType ="Button">
                        <Grid>
                            <Rectangle x:Name="rec"  Height="Auto" Width="Auto" RadiusX="10" RadiusY="10" 
                                       Stroke="#FF74584B" Margin="2,2,2,2"
                                       Fill="{TemplateBinding Background}"/>

                            <ContentPresenter Content="{TemplateBinding Content}"
                                   VerticalAlignment="Center" HorizontalAlignment="Center"/>

                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="rec" Property="Fill"  Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button"  BasedOn="{StaticResource {x:Type Button}}"  x:Key="button1">
            <Setter Property="Control.Background" Value="#FF5F2A58" />
            <Setter Property="Control.BorderBrush" Value="Gray"/>
        </Style>
        <Style TargetType="Button"  BasedOn="{StaticResource {x:Type Button}}"  x:Key="button2">
            <Setter Property="Control.Background" Value="#FF464949" />
            <Setter Property="Control.BorderBrush" Value="Gray"/>
        </Style>

    </Window.Resources>

    <Grid Background="#FFC9B7C7" >
        <Grid.RowDefinitions>            
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <GroupBox  Header="Калькулятор" Margin="5" BorderThickness="2" BorderBrush="#FF3D2940">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40" />                   
                </Grid.RowDefinitions>
            
        <TextBlock Background="LightGray" Text="{Binding Path=CalcText}" FontSize="20"/>
        <TextBlock Grid.Row="1" Background="LightGray" Text="{Binding Path=Result}"/>
            </Grid>
        </GroupBox>
        <UniformGrid Grid.Row="1" Rows="6" Columns="4" Background="#FFC9B7C7">
            <Button Content="%" Command="{Binding Path=PercentagesCommand}" Style="{StaticResource button1}"/>
            <Button Content="CE" Command="{Binding Path=ResetCommand}" Style="{StaticResource button1}"/>
            <Button Content="C"  Command="{Binding Path=ResetCommand}" Style="{StaticResource button1}" />
            <Button Content="←" Command="{Binding Path=RemoveCommand}" Style="{StaticResource button1}" />
            <Button Content="1/x" Command="{Binding Path=InverseCommand}" Style="{StaticResource button1}" />
            <Button Content="xⁿ" Command="{Binding Path=PowerCommand}" Style="{StaticResource button1}" />
            <Button Content="√x" Command="{Binding Path=SqrtCommand}" Style="{StaticResource button1}" />
            <Button Content="/"  Style="{StaticResource button1}"/>
            <Button Content="7" Style="{StaticResource button2}" />
            <Button Content="8" Style="{StaticResource button2}" />
            <Button Content="9" Style="{StaticResource button2}" />
            <Button Content="*" Style="{StaticResource button1}" />
            <Button Content="4" Style="{StaticResource button2}" />
            <Button Content="5"  Style="{StaticResource button2}"/>
            <Button Content="6" Style="{StaticResource button2}"/>
            <Button Content="-" Style="{StaticResource button1}" />
            <Button Content="1" Style="{StaticResource button2}"/>
            <Button Content="2" Style="{StaticResource button2}"/>
            <Button Content="3" Style="{StaticResource button2}" />
            <Button Content="+"  Style="{StaticResource button1}"/>
            <Button Content="+/-" Command="{Binding Path=SignCommand}" Style="{StaticResource button1}"/>
            <Button Content="0" Style="{StaticResource button2}" />
            <Button Content="." Style="{StaticResource button1}"/>
            <Button Content="=" Command="{Binding Path=ArifCommand}" Background="#FF1D1621" />
        </UniformGrid>
    </Grid>

</Window>
